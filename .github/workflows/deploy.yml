name: Deploy to EC2
on:
  push:
    branches:
      - main
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "npm"
      - name: Install dependencies
        run: npm ci
      - name: Build application
        run: npm run build
      - name: Create deployment package
        run: |
          echo 'const nextConfig = { output: "standalone" }; export default nextConfig;' > next.config.mjs
          echo 'module.exports = {
            apps: [{
              name: "zort",
              script: "npm",
              args: "start", 
              instances: "max",
              exec_mode: "cluster",
              env: {
                NODE_ENV: "production",
                PORT: 3001,
                NEXT_PUBLIC_API_URL: "http://localhost:3001"
              }
            }]
          };' > ecosystem.config.cjs
          tar -czf deploy.tar.gz dist .next server package.json package-lock.json ecosystem.config.cjs next.config.mjs
      - name: Deploy to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "deploy.tar.gz"
          target: "/home/ubuntu/app"
      - name: Execute deployment commands
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd /home/ubuntu/app
            tar -xzf deploy.tar.gz
            npm ci --production
            pm2 reload ecosystem.config.cjs --update-env
            pm2 save
